{"version":3,"sources":["components/404.js","containers/Error.js","base-axios.js","utils/secureLocalStorage.js","utils/localStorage.js","store/actions/common.js"],"names":["Err404","className","direction","cascade","triggerOnce","delay","to","Error","document","title","this","props","fetchCommonData","Component","connect","dispatch","initCommonData","firebaseAxiosInstance","axios","create","baseURL","mediumAxiosInstance","SecureLocalStorage","encrypt","dataToEncrypt","secretKey","Aes","stringify","toString","decrypt","dataToDecrypt","decryptedString","CryptoJsCore","Utf8","JSON","parse","err","console","error","SecretKey","LocalStorage","get","LSKey","storedData","window","localStorage","getItem","undefined","expires_at","Date","getTime","removeItem","encryptedData","set","data","storeData","TTL_ms","setItem","commonData","type","actionTypes","prevState","then","res","catch","errMsg"],"mappings":"6LA0BeA,EAvBA,WACX,OACI,0BAASC,UAAU,6FAAnB,UACI,eAAC,IAAD,CAAMC,UAAU,KAAKC,SAAO,EAACC,aAAW,EAAxC,UACI,sBAAMH,UAAU,0DAAhB,iBAGA,sBAAMA,UAAU,mEAAhB,+BAIJ,cAAC,IAAD,CAAMG,aAAW,EAACC,MAAO,KAAMJ,UAAU,QAAzC,SACI,cAAC,IAAD,CACIK,GAAG,IACHL,UAAU,2HAFd,2BCTVM,E,uKACF,WACIC,SAASC,MAAQ,gCAEjBC,KAAKC,MAAMC,oB,oBAGf,WACI,OAAO,cAAC,EAAD,Q,GARKC,aAmBLC,sBAAQ,MANI,SAACC,GACxB,MAAO,CACHH,gBAAiB,kBAAMG,EAASC,mBAIzBF,CAAkCP,I,gCCzBjD,yFAGaU,EAAwBC,IAAMC,OAAO,CAC9CC,QACI,iFAGKC,EAAsBH,IAAMC,OAAO,CAC5CC,QAAS,iC,qECgBEE,EArBY,CACvBC,QAAS,SAACC,EAAeC,GACrB,OAAOC,UAAYC,IAAUH,GAAgBC,GAAWG,YAG5DC,QAAS,SAACC,EAAeL,GACrB,IACI,IAAMM,EAAkBL,UACpBI,EACAL,GACFG,SAASI,MAAiBC,MAC5B,OAAOC,KAAKC,MAAMJ,GACpB,MAAOK,GAIL,OAHAC,QAAQC,MAAR,8DAC2DF,IAEpD,QClBbG,EAAY,uBAGZC,EAAe,CACjBC,IAAK,SAACC,GACF,IAAMC,EAAaT,KAAKC,MAAMS,OAAOC,aAAaC,QAAQJ,IAC1D,OAAmB,OAAfC,QAAsCI,IAAfJ,EAAiC,KAI9B,OAA1BA,EAAWK,YACXL,EAAWK,YAAa,IAAIC,MAAOC,WAEnCN,OAAOC,aAAaM,WAAWT,GACxB,MAIJpB,EAAmBO,QAAQc,EAAWS,cAAeb,IAGhEc,IAAK,SAACX,EAAOY,GACT,IAAMC,EAAY,CACdH,cAAe9B,EAAmBC,QAAQ+B,EAAMf,GAChDS,YAAY,IAAIC,MAAOC,UAAYM,OAEvCZ,OAAOC,aAAaY,QAAQf,EAAOR,KAAKP,UAAU4B,MAI3Cf,O,gCChCf,6DAcM5B,EAAkB,SAAC8C,GACrB,MAAO,CACHC,KAAMC,IACNF,WAAYA,IAGP1C,EAAiB,kBAAM,SAACD,GACjC,IAAM8C,EAAYrB,IAAaC,IAAI,cACnC,GAAkB,OAAdoB,EAAoB,OAAO9C,EAASH,EAAgBiD,IAExD5C,IACKwB,IAAI,oBACJqB,MAAK,SAACC,GACHhD,EAASH,EAAgBmD,EAAIT,OAC7Bd,IAAaa,IAAI,aAAcU,EAAIT,SAEtCU,OAAM,SAAC5B,GA1BU,IAAC6B,EA2BflD,GA3BekD,EA2BY7B,EAAIR,WA1BhC,CACH+B,KAAMC,IACNtB,MAAO2B,W","file":"static/js/6.cd2ed25d.chunk.js","sourcesContent":["import { Fade } from \"react-awesome-reveal\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Err404 = () => {\n    return (\n        <section className=\"min-h-screen max-w-xl mx-auto flex flex-col justify-center text-center space-y-4 flex-grow\">\n            <Fade direction=\"up\" cascade triggerOnce>\n                <span className=\"text-main-color font-ssp font-bold text-8xl lg:text-9xl\">\n                    404\n                </span>\n                <span className=\"text-content-color font-manrope font-medium text-2xl lg:text-3xl\">\n                    Page Not Found\n                </span>\n            </Fade>\n            <Fade triggerOnce delay={1600} className=\"pt-12\">\n                <NavLink\n                    to=\"/\"\n                    className=\"text-main-color font-manrope font-bold text-xs xs:text-sm self-center flex-shrink justify-center px-6 py-3 box-border-md\"\n                >\n                    Go Home\n                </NavLink>\n            </Fade>\n        </section>\n    );\n};\n\nexport default Err404;\n","import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { initCommonData } from \"../store/actions/common\";\n\nimport Err404 from \"../components/404\";\n\nclass Error extends Component {\n    componentDidMount() {\n        document.title = \"Page Not Found | Dhyey Thumar\";\n\n        this.props.fetchCommonData();\n    }\n\n    render() {\n        return <Err404 />;\n    }\n}\n\n// dispatch actions\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchCommonData: () => dispatch(initCommonData()),\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(Error);\n","import axios from \"axios\";\n\n// Creating an instance of axios containing a URL so whenever there is a need to change the url it whould be this place only\nexport const firebaseAxiosInstance = axios.create({\n    baseURL:\n        \"https://portfolio-2-3c917-default-rtdb.asia-southeast1.firebasedatabase.app/\"\n});\n\nexport const mediumAxiosInstance = axios.create({\n    baseURL: \"https://api.rss2json.com/v1\",\n});\n","import * as Aes from \"crypto-js/aes\";\nimport * as CryptoJsCore from \"crypto-js/core\";\nimport stringify from \"json-stringify-safe\";\n\nconst SecureLocalStorage = {\n    encrypt: (dataToEncrypt, secretKey) => {\n        return Aes.encrypt(stringify(dataToEncrypt), secretKey).toString();\n    },\n\n    decrypt: (dataToDecrypt, secretKey) => {\n        try {\n            const decryptedString = Aes.decrypt(\n                dataToDecrypt,\n                secretKey\n            ).toString(CryptoJsCore.enc.Utf8);\n            return JSON.parse(decryptedString);\n        } catch (err) {\n            console.error(\n                `LocalStorage decryption gave the following error :: ${err}`\n            );\n            return null;\n        }\n    },\n};\n\nexport default SecureLocalStorage;\n","import SecureLocalStorage from \"./secureLocalStorage\";\n\nconst SecretKey = \"dhyey-thumar-website\";\nconst TTL_ms = 24 * 60 * 60 * 1000; // expires in 24 hrs\n\nconst LocalStorage = {\n    get: (LSKey) => {\n        const storedData = JSON.parse(window.localStorage.getItem(LSKey));\n        if (storedData === null || storedData === undefined) return null;\n\n        // check the expiry data of localstorage\n        if (\n            storedData.expires_at !== null &&\n            storedData.expires_at < new Date().getTime()\n        ) {\n            window.localStorage.removeItem(LSKey);\n            return null;\n        }\n\n        // decrypt the localstorage data\n        return SecureLocalStorage.decrypt(storedData.encryptedData, SecretKey);\n    },\n\n    set: (LSKey, data) => {\n        const storeData = {\n            encryptedData: SecureLocalStorage.encrypt(data, SecretKey),\n            expires_at: new Date().getTime() + TTL_ms / 1,\n        };\n        window.localStorage.setItem(LSKey, JSON.stringify(storeData));\n    },\n};\n\nexport default LocalStorage;\n","import * as actionTypes from \"./actionTypes\";\nimport { firebaseAxiosInstance } from \"../../base-axios\";\nimport LocalStorage from \"../../utils/localStorage\";\n\nconst fetchCommonFailed = (errMsg) => {\n    return {\n        type: actionTypes.FETCH_COMMON_FAILED,\n        error: errMsg,\n    };\n};\n\n// -------------------------------------------------------------------\n// ---------------------- fetch the common data ---------------------\n// -------------------------------------------------------------------\nconst fetchCommonData = (commonData) => {\n    return {\n        type: actionTypes.FETCH_COMMON_DATA,\n        commonData: commonData,\n    };\n};\nexport const initCommonData = () => (dispatch) => {\n    const prevState = LocalStorage.get(\"commonData\");\n    if (prevState !== null) return dispatch(fetchCommonData(prevState));\n\n    firebaseAxiosInstance\n        .get(\"/commonData.json\")\n        .then((res) => {\n            dispatch(fetchCommonData(res.data));\n            LocalStorage.set(\"commonData\", res.data);\n        })\n        .catch((err) => {\n            dispatch(fetchCommonFailed(err.toString()));\n        });\n};\n"],"sourceRoot":""}