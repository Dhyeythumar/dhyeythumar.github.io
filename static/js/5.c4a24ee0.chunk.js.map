{"version":3,"sources":["components/UI/spinner.js","base-axios.js","utils/secureLocalStorage.js","utils/localStorage.js","store/actions/projects.js","components/Projects/utils.js","components/Projects/devProjCard.js","components/Projects/FeatProj.js","components/Projects/OtherProj.js","components/Projects/DesignProj.js","containers/Projects.js"],"names":["Spinner","className","firebaseAxiosInstance","axios","create","baseURL","mediumAxiosInstance","SecureLocalStorage","encrypt","dataToEncrypt","secretKey","Aes","stringify","toString","decrypt","dataToDecrypt","decryptedString","CryptoJsCore","Utf8","JSON","parse","err","console","error","SecretKey","LocalStorage","get","LSKey","storedData","window","localStorage","getItem","undefined","expires_at","Date","getTime","removeItem","encryptedData","set","data","storeData","TTL_ms","setItem","fetchProjFailed","errObj","type","actionTypes","fetchFeatProj","proj","fetchOtherProj","fetchDesignProj","ProjImage","props","useState","loaded","setLoaded","onLoad","customClasses","src","imgUrl","width","height","alt","imgAltText","loading","ProjTitle","children","ProjDate","ProjDesc","ExpandProjList","onClick","totalOpenCards","projLen","setTotalOpenCards","initialCardToDisplay","DevProjCard","classes","hidden","url","img","headerGrow","demoUrl","demo","title","href","rel","target","id","code","date","desc","tags","map","tag","connect","state","featProj","projects","errMsg","errorMsgs","featProjErrMsg","sectionContent","index","otherProj","otherProjErrMsg","length","designProj","designProjErrMsg","imageUrl","Projects","document","this","fetchFeatProjData","fetchOtherProjData","fetchDesignProjData","OtherProj","DesignProj","Component","dispatch","prevState","then","res","reverse","catch","msg"],"mappings":"mGAAA,mDAEaA,EAAU,WACnB,OACI,qBAAKC,UAAU,6EAAf,SACI,qBAAKA,UAAU,4BAAf,SACI,qBAAKA,UAAU,iB,gCCN/B,yFAGaC,EAAwBC,IAAMC,OAAO,CAC9CC,QACI,iFAGKC,EAAsBH,IAAMC,OAAO,CAC5CC,QAAS,iC,0FCgBEE,EArBY,CACvBC,QAAS,SAACC,EAAeC,GACrB,OAAOC,UAAYC,IAAUH,GAAgBC,GAAWG,YAG5DC,QAAS,SAACC,EAAeL,GACrB,IACI,IAAMM,EAAkBL,UACpBI,EACAL,GACFG,SAASI,MAAiBC,MAC5B,OAAOC,KAAKC,MAAMJ,GACpB,MAAOK,GAIL,OAHAC,QAAQC,MAAR,8DAC2DF,IAEpD,QClBbG,EAAY,uBAGZC,EAAe,CACjBC,IAAK,SAACC,GACF,IAAMC,EAAaT,KAAKC,MAAMS,OAAOC,aAAaC,QAAQJ,IAC1D,OAAmB,OAAfC,QAAsCI,IAAfJ,EAAiC,KAI9B,OAA1BA,EAAWK,YACXL,EAAWK,YAAa,IAAIC,MAAOC,WAEnCN,OAAOC,aAAaM,WAAWT,GACxB,MAIJpB,EAAmBO,QAAQc,EAAWS,cAAeb,IAGhEc,IAAK,SAACX,EAAOY,GACT,IAAMC,EAAY,CACdH,cAAe9B,EAAmBC,QAAQ+B,EAAMf,GAChDS,YAAY,IAAIC,MAAOC,UAAYM,OAEvCZ,OAAOC,aAAaY,QAAQf,EAAOR,KAAKP,UAAU4B,MAI3Cf,O,yJC5BTkB,EAAkB,SAACC,GACrB,MAAO,CACHC,KAAMC,IACNvB,MAAOqB,IAOTG,EAAgB,SAACC,GACnB,MAAO,CACHH,KAAMC,IACNE,KAAMA,IA0BRC,EAAiB,SAACD,GACpB,MAAO,CACHH,KAAMC,IACNE,KAAMA,IA0BRE,EAAkB,SAACF,GACrB,MAAO,CACHH,KAAMC,IACNE,KAAMA,I,uCCxEDG,EAAY,SAACC,GACtB,MAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KAEA,OACI,uBAAMtD,UAAU,gCAAhB,UACI,qBACIuD,OAAQ,kBAAMD,GAAU,IACxBtD,UAAS,gEAA2DmD,EAAMK,eAC1EC,IAAKN,EAAMO,OACXC,MAAOR,EAAMQ,MACbC,OAAQT,EAAMS,OACdC,IAAKV,EAAMW,WACXC,QAAQ,SAEZ,qBACI/D,UAAS,UACLqD,EAAM,YADD,sEADb,SAKI,cAAC,IAAD,UAMHW,EAAY,SAACb,GAAD,OACrB,sBACInD,UAAS,0DACLmD,EAAMK,cAAgBL,EAAMK,cAA5B,IAFR,SAKKL,EAAMc,YAIFC,EAAW,SAACf,GAAD,OACpB,mBACInD,UAAS,+CACLmD,EAAMK,cAAgBL,EAAMK,cAA5B,IAFR,SAKKL,EAAMc,YAIFE,EAAW,SAAChB,GAAD,OACpB,mBACInD,UAAS,uGAAkGmD,EAAMK,eADrH,SAGKL,EAAMc,YAIFG,EAAiB,SAACjB,GAC3B,OACI,qBAAKnD,UAAU,kEAAf,SACI,wBACIqE,QAAS,WACDlB,EAAMmB,eAAiBnB,EAAMoB,QAC7BpB,EAAMqB,kBAAkBrB,EAAMmB,eAAiB,GAC9CnB,EAAMqB,kBAAkBrB,EAAMsB,uBAEvCzE,UAAU,4CANd,SAQI,sBAAMA,UAAU,4CAAhB,SACKmD,EAAMmB,eAAiBnB,EAAMoB,QAC1B,6CAEKpB,EAAMoB,QAAUpB,EAAMmB,eAF3B,kBAMA,iDCATI,G,MAlDK,SAACvB,GACjB,OACI,sBACInD,UAAS,qDACLmD,EAAMwB,QADD,YAELxB,EAAMyB,OAAN,aAHR,eAK4B7C,IAAvBoB,EAAMJ,KAAK8B,IAAIC,IACZ,cAAC,EAAD,CACItB,cAAc,yBACdE,OAAQP,EAAMJ,KAAK8B,IAAIC,IACvBhB,WAAW,cACXH,MAAM,MACNC,OAAO,QAEX,KAEJ,yBACI5D,UACI,iBAAmBmD,EAAM4B,WAAa,aAAe,IAF7D,UAKI,cAAC,EAAD,UACI,uBAAM/E,UAAU,uBAAhB,WA5CEgF,EA6CgB7B,EAAMJ,KAAK8B,IAAII,KA7CtBC,EA6C4B/B,EAAMJ,KAAKmC,MA5C/C,KAAZF,EACH,uBAAMhF,UAAU,0CAAhB,UACI,mBACIA,UAAU,OACVmF,KAAMH,EACNI,IAAI,sBACJC,OAAO,SACPC,GAAG,qBALP,SAOKJ,IAEL,mBAAGlF,UAAU,uHAAb,SACI,cAAC,IAAD,CAAYwD,cAAc,aAIlC,4BAAI0B,KA6BY,mBACIC,KAAMhC,EAAMJ,KAAK8B,IAAIU,KACrBH,IAAI,sBACJC,OAAO,SACPrF,UAAU,0CAJd,SAMI,cAAC,IAAD,CAAcwD,cAAc,6CAIxC,cAAC,EAAD,UAAWL,EAAMJ,KAAKyC,OACtB,cAAC,EAAD,UAAWrC,EAAMJ,KAAK0C,UAG1B,wBAAQzF,UAAU,uGAAlB,SACKmD,EAAMJ,KAAK2C,KAAKC,KAAI,SAACC,GAAD,OACjB,sBAAgB5F,UAAU,iBAA1B,SACK4F,GADMA,WA9DV,IAACZ,EAASE,ICqChBW,eAPS,SAACC,GACrB,MAAO,CACHC,SAAUD,EAAME,SAASD,SACzBE,OAAQH,EAAME,SAASE,UAAUC,kBAID,KAAzBN,EAnCU,SAAC1C,GACtB,IAAIiD,EAAiB,cAAC,IAAD,IAgBrB,MAdqB,KAAjBjD,EAAM8C,OACNG,EAAiB,cAAC,IAAD,UAAiBjD,EAAM8C,SAGhB,OAAnB9C,EAAM4C,WACXK,EACI,qBAAKpG,UAAU,wFAAf,SACKmD,EAAM4C,SAASJ,KAAI,SAAC5C,EAAMsD,GAAP,OAChB,cAAC,EAAD,CAAyB1B,QAAQ,GAAG5B,KAAMA,GAAxBsD,SAO9B,qBAAKrG,UAAU,iBAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,iCACCoG,UC+BFP,eAPS,SAACC,GACrB,MAAO,CACHQ,UAAWR,EAAME,SAASM,UAC1BL,OAAQH,EAAME,SAASE,UAAUK,mBAID,KAAzBV,EAlDO,SAAC1C,GAEnB,MAA4CC,mBAAS,GAArD,mBAAOkB,EAAP,KAAuBE,EAAvB,KAEI4B,EAAiB,cAAC,IAAD,IA8BrB,MA5BqB,KAAjBjD,EAAM8C,OACNG,EAAiB,cAAC,IAAD,UAAiBjD,EAAM8C,SAGf,OAApB9C,EAAMmD,YACXF,EACI,qCACI,qBAAKpG,UAAU,uFAAf,SACKmD,EAAMmD,UAAUX,KAAI,SAAC5C,EAAMsD,GAAP,OACjB,cAAC,EAAD,CAEIzB,SAAQyB,EAAQ/B,GAChBK,QAAQ,iEACRI,YAAU,EACVhC,KAAMA,GAJDsD,QAQjB,cAAC,EAAD,CACI/B,eAAgBA,EAChBE,kBAAmBA,EACnBC,qBAAsB,EACtBF,QAASpB,EAAMmD,UAAUE,aAOrC,eAAC,IAAD,WACI,cAAC,IAAD,yCACCJ,QCyCEP,eAPS,SAACC,GACrB,MAAO,CACHW,WAAYX,EAAME,SAASS,WAC3BR,OAAQH,EAAME,SAASE,UAAUQ,oBAID,KAAzBb,EAzEQ,SAAC1C,GAEpB,MAA4CC,mBAAS,GAArD,mBAAOkB,EAAP,KAAuBE,EAAvB,KAEI4B,EAAiB,cAAC,IAAD,IAgDrB,MA9CqB,KAAjBjD,EAAM8C,OACNG,EAAiB,cAAC,IAAD,UAAiBjD,EAAM8C,SAGd,OAArB9C,EAAMsD,aACXL,EACI,qCACI,qBAAKpG,UAAU,yIAAf,SACKmD,EAAMsD,WAAWd,KAAI,SAAC5C,EAAMsD,GACzB,OACI,sBAEIrG,UACI,gCACCqG,EAAQ/B,EAAiB,GAAK,UAJvC,UAOI,cAAC,EAAD,CACIZ,OAAQX,EAAK4D,SACb7C,WAAW,iBACXH,MAAM,MACNC,OAAO,QAEX,yBAAQ5D,UAAU,mCAAlB,UACI,cAAC,EAAD,UAAY+C,EAAKmC,QACjB,eAAC,EAAD,WACKnC,EAAKyC,KADV,yBAGKzC,EAAK6C,OAEV,cAAC,EAAD,UAAW7C,EAAK0C,YAnBfY,QAyBrB,cAAC,EAAD,CACI/B,eAAgBA,EAChBE,kBAAmBA,EACnBC,qBAAsB,EACtBF,QAASpB,EAAMsD,WAAWD,aAOtC,eAAC,IAAD,WACI,eAAC,IAAD,8BAEI,mBAAGxG,UAAU,eAAb,8DAIHoG,QC7DPQ,E,uKAEF,WACIC,SAAS3B,MAAQ,0BAEjB4B,KAAK3D,MAAM4D,oBACXD,KAAK3D,MAAM6D,qBACXF,KAAK3D,MAAM8D,wB,oBAGf,WACI,OACI,qCAEI,cAAC,EAAD,IAGA,cAACC,EAAD,IAGA,cAACC,EAAD,W,GApBOC,aAmCRvB,sBAAQ,MARI,SAACwB,GACxB,MAAO,CACHN,kBAAmB,kBAAMM,GNrBC,SAACA,GAC/B,IAAMC,EAAY9F,IAAaC,IAAI,oBACnC,GAAkB,OAAd6F,EAAoB,OAAOD,EAASvE,EAAcwE,IAEtDrH,IACKwB,IAAI,0BACJ8F,MAAK,SAACC,GACHA,EAAIlF,KAAKmF,UACTJ,EAASvE,EAAc0E,EAAIlF,OAC3Bd,IAAaa,IAAI,mBAAoBmF,EAAIlF,SAE5CoF,OAAM,SAACtG,GACJ,IAAMuB,EAAS,CACXC,KAAM,iBACN+E,IAAKvG,EAAIR,YAEbyG,EAAS3E,EAAgBC,WMM7BqE,mBAAoB,kBAAMK,GNOC,SAACA,GAChC,IAAMC,EAAY9F,IAAaC,IAAI,iBACnC,GAAkB,OAAd6F,EAAoB,OAAOD,EAASrE,EAAesE,IAEvDrH,IACKwB,IAAI,uBACJ8F,MAAK,SAACC,GACHA,EAAIlF,KAAKmF,UACTJ,EAASrE,EAAewE,EAAIlF,OAC5Bd,IAAaa,IAAI,gBAAiBmF,EAAIlF,SAEzCoF,OAAM,SAACtG,GACJ,IAAMuB,EAAS,CACXC,KAAM,kBACN+E,IAAKvG,EAAIR,YAEbyG,EAAS3E,EAAgBC,WMtB7BsE,oBAAqB,kBAAMI,GNmCC,SAACA,GACjC,IAAMC,EAAY9F,IAAaC,IAAI,kBACnC,GAAkB,OAAd6F,EAAoB,OAAOD,EAASpE,EAAgBqE,IAExDrH,IACKwB,IAAI,wBACJ8F,MAAK,SAACC,GACHA,EAAIlF,KAAKmF,UACTJ,EAASpE,EAAgBuE,EAAIlF,OAC7Bd,IAAaa,IAAI,iBAAkBmF,EAAIlF,SAE1CoF,OAAM,SAACtG,GACJ,IAAMuB,EAAS,CACXC,KAAM,mBACN+E,IAAKvG,EAAIR,YAEbyG,EAAS3E,EAAgBC,cM/CtBkD,CAAkCe","file":"static/js/5.c4a24ee0.chunk.js","sourcesContent":["import \"./css/spinner.css\";\n\nexport const Spinner = () => {\n    return (\n        <div className=\"min-h-full text-content-color flex justify-center flex-wrap content-center\">\n            <div className=\"h-10 w-10 sm:h-14 sm:w-14\">\n                <div className=\"loader\"></div>\n            </div>\n        </div>\n    );\n};\n","import axios from \"axios\";\n\n// Creating an instance of axios containing a URL so whenever there is a need to change the url it whould be this place only\nexport const firebaseAxiosInstance = axios.create({\n    baseURL:\n        \"https://portfolio-2-3c917-default-rtdb.asia-southeast1.firebasedatabase.app/\",\n});\n\nexport const mediumAxiosInstance = axios.create({\n    baseURL: \"https://api.rss2json.com/v1\",\n});\n","import * as Aes from \"crypto-js/aes\";\nimport * as CryptoJsCore from \"crypto-js/core\";\nimport stringify from \"json-stringify-safe\";\n\nconst SecureLocalStorage = {\n    encrypt: (dataToEncrypt, secretKey) => {\n        return Aes.encrypt(stringify(dataToEncrypt), secretKey).toString();\n    },\n\n    decrypt: (dataToDecrypt, secretKey) => {\n        try {\n            const decryptedString = Aes.decrypt(\n                dataToDecrypt,\n                secretKey\n            ).toString(CryptoJsCore.enc.Utf8);\n            return JSON.parse(decryptedString);\n        } catch (err) {\n            console.error(\n                `LocalStorage decryption gave the following error :: ${err}`\n            );\n            return null;\n        }\n    },\n};\n\nexport default SecureLocalStorage;\n","import SecureLocalStorage from \"./secureLocalStorage\";\n\nconst SecretKey = \"dhyey-thumar-website\";\nconst TTL_ms = 24 * 60 * 60 * 1000; // expires in 24 hrs\n\nconst LocalStorage = {\n    get: (LSKey) => {\n        const storedData = JSON.parse(window.localStorage.getItem(LSKey));\n        if (storedData === null || storedData === undefined) return null;\n\n        // check the expiry data of localstorage\n        if (\n            storedData.expires_at !== null &&\n            storedData.expires_at < new Date().getTime()\n        ) {\n            window.localStorage.removeItem(LSKey);\n            return null;\n        }\n\n        // decrypt the localstorage data\n        return SecureLocalStorage.decrypt(storedData.encryptedData, SecretKey);\n    },\n\n    set: (LSKey, data) => {\n        const storeData = {\n            encryptedData: SecureLocalStorage.encrypt(data, SecretKey),\n            expires_at: new Date().getTime() + TTL_ms / 1,\n        };\n        window.localStorage.setItem(LSKey, JSON.stringify(storeData));\n    },\n};\n\nexport default LocalStorage;\n","import * as actionTypes from \"./actionTypes\";\nimport { firebaseAxiosInstance } from \"../../base-axios\";\nimport LocalStorage from \"../../utils/localStorage\";\n\nconst fetchProjFailed = (errObj) => {\n    return {\n        type: actionTypes.FETCH_PROJ_FAILED,\n        error: errObj,\n    };\n};\n\n// -------------------------------------------------------------------\n// ------------------- fetch featured projects data -----------------\n// -------------------------------------------------------------------\nconst fetchFeatProj = (proj) => {\n    return {\n        type: actionTypes.FETCH_FEAT_PROJ,\n        proj: proj,\n    };\n};\nexport const initFeatProj = () => (dispatch) => {\n    const prevState = LocalStorage.get(\"featuredProjects\");\n    if (prevState !== null) return dispatch(fetchFeatProj(prevState));\n\n    firebaseAxiosInstance\n        .get(\"/featuredProjects.json\")\n        .then((res) => {\n            res.data.reverse();\n            dispatch(fetchFeatProj(res.data));\n            LocalStorage.set(\"featuredProjects\", res.data);\n        })\n        .catch((err) => {\n            const errObj = {\n                type: \"featProjErrMsg\",\n                msg: err.toString(),\n            };\n            dispatch(fetchProjFailed(errObj));\n        });\n};\n\n// -------------------------------------------------------------------\n// ---------------- fetch other noteworthy projects data -------------\n// -------------------------------------------------------------------\nconst fetchOtherProj = (proj) => {\n    return {\n        type: actionTypes.FETCH_OTHER_PROJ,\n        proj: proj,\n    };\n};\nexport const initOtherProj = () => (dispatch) => {\n    const prevState = LocalStorage.get(\"otherProjects\");\n    if (prevState !== null) return dispatch(fetchOtherProj(prevState));\n\n    firebaseAxiosInstance\n        .get(\"/otherProjects.json\")\n        .then((res) => {\n            res.data.reverse();\n            dispatch(fetchOtherProj(res.data));\n            LocalStorage.set(\"otherProjects\", res.data);\n        })\n        .catch((err) => {\n            const errObj = {\n                type: \"otherProjErrMsg\",\n                msg: err.toString(),\n            };\n            dispatch(fetchProjFailed(errObj));\n        });\n};\n\n// -------------------------------------------------------------------\n// -------------------- fetch design projects data -------------------\n// -------------------------------------------------------------------\nconst fetchDesignProj = (proj) => {\n    return {\n        type: actionTypes.FETCH_DESIGN_PROJ,\n        proj: proj,\n    };\n};\nexport const initDesignProj = () => (dispatch) => {\n    const prevState = LocalStorage.get(\"designProjects\");\n    if (prevState !== null) return dispatch(fetchDesignProj(prevState));\n\n    firebaseAxiosInstance\n        .get(\"/designProjects.json\")\n        .then((res) => {\n            res.data.reverse();\n            dispatch(fetchDesignProj(res.data));\n            LocalStorage.set(\"designProjects\", res.data);\n        })\n        .catch((err) => {\n            const errObj = {\n                type: \"designProjErrMsg\",\n                msg: err.toString(),\n            };\n            dispatch(fetchProjFailed(errObj));\n        });\n};\n","import { useState } from \"react\";\nimport { Spinner } from \"../UI/spinner\";\n\nexport const ProjImage = (props) => {\n    const [loaded, setLoaded] = useState(false);\n\n    return (\n        <span className=\"relative mb-3 xs:mb-4 lg:mb-5\">\n            <img\n                onLoad={() => setLoaded(true)}\n                className={`w-full h-auto rounded-sm xxs:rounded-md lg:rounded-lg ${props.customClasses}`}\n                src={props.imgUrl}\n                width={props.width}\n                height={props.height}\n                alt={props.imgAltText}\n                loading=\"lazy\"\n            />\n            <div\n                className={`${\n                    loaded ? `hidden` : ``\n                } absolute top-0 bottom-0 left-0 right-0 bg-secondary bg-opacity-20`}\n            >\n                <Spinner />\n            </div>\n        </span>\n    );\n};\n\nexport const ProjTitle = (props) => (\n    <span\n        className={`heading lg:text-xl mb-1 sm:mb-2 md:mb-1 lg:mb-2 ${\n            props.customClasses ? props.customClasses : ``\n        }`}\n    >\n        {props.children}\n    </span>\n);\n\nexport const ProjDate = (props) => (\n    <p\n        className={`submain mb-3 sm:mb-4 md:mb-3 lg:mb-5 ${\n            props.customClasses ? props.customClasses : ``\n        }`}\n    >\n        {props.children}\n    </p>\n);\n\nexport const ProjDesc = (props) => (\n    <p\n        className={`content text-xs-sm xxs:text-sm-base md:text-xs-sm lg:leading-7 lg:tracking-wide lg:text-base ${props.customClasses}`}\n    >\n        {props.children}\n    </p>\n);\n\nexport const ExpandProjList = (props) => {\n    return (\n        <div className=\"flex items-center justify-center mt-6 xs:mt-8 md:mt-10 lg:mt-12\">\n            <button\n                onClick={() => {\n                    if (props.totalOpenCards < props.projLen)\n                        props.setTotalOpenCards(props.totalOpenCards + 2);\n                    else props.setTotalOpenCards(props.initialCardToDisplay);\n                }}\n                className=\"text-main px-5 lg:px-6 py-3 box-border-md\"\n            >\n                <span className=\"font-manrope font-bold text-xs lg:text-sm\">\n                    {props.totalOpenCards < props.projLen ? (\n                        <p>\n                            Show&nbsp;&nbsp;\n                            {props.projLen - props.totalOpenCards}\n                            &nbsp;&nbsp;More\n                        </p>\n                    ) : (\n                        <p>Show Less</p>\n                    )}\n                </span>\n            </button>\n        </div>\n    );\n};\n","import { GitHubCircle, ArrowRight } from \"../UI/icons\";\nimport { ProjImage, ProjTitle, ProjDate, ProjDesc } from \"./utils\";\nimport \"./css/projStyles.css\";\n\nconst getProjTitle = (demoUrl, title) => {\n    return demoUrl !== \"\" ? (\n        <span className=\"flex flex-row hover:text-main space-x-2\">\n            <a\n                className=\"z-20\"\n                href={demoUrl}\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n                id=\"otherProjHyperLink\"\n            >\n                {title}\n            </a>\n            <p className=\"font-normal hidden xxxs:block ml-1 my-auto transform -rotate-45 group-hover:translate-x-1 group-hover:-translate-y-1\">\n                <ArrowRight customClasses=\"w-4\" />\n            </p>\n        </span>\n    ) : (\n        <p>{title}</p>\n    );\n};\n\nconst DevProjCard = (props) => {\n    return (\n        <div\n            className={`h-auto w-full relative group flex flex-col ${\n                props.classes\n            } ${props.hidden ? `hidden` : ``}`}\n        >\n            {props.proj.url.img !== undefined ? (\n                <ProjImage\n                    customClasses=\"group-hover:opacity-80\"\n                    imgUrl={props.proj.url.img}\n                    imgAltText=\"dev-project\"\n                    width=\"545\"\n                    height=\"316\"\n                />\n            ) : null}\n\n            <header\n                className={\n                    \"flex flex-col\" + (props.headerGrow ? \" flex-grow\" : \"\")\n                }\n            >\n                <ProjTitle>\n                    <span className=\"flex justify-between\">\n                        {getProjTitle(props.proj.url.demo, props.proj.title)}\n                        <a\n                            href={props.proj.url.code}\n                            rel=\"noopener noreferrer\"\n                            target=\"_blank\"\n                            className=\"text-submain-color hover:text-main z-30\"\n                        >\n                            <GitHubCircle customClasses=\"w-5 xxxs:w-6 sm:w-7 md:w-6 lg:w-7\" />\n                        </a>\n                    </span>\n                </ProjTitle>\n                <ProjDate>{props.proj.date}</ProjDate>\n                <ProjDesc>{props.proj.desc}</ProjDesc>\n            </header>\n\n            <footer className=\"submain mt-5 lg:mt-6 flex flex-nowrap space-x-3 xxs:space-x-5 overflow-x-auto overscroll-x-none z-30\">\n                {props.proj.tags.map((tag) => (\n                    <span key={tag} className=\"flex-none mb-1\">\n                        {tag}\n                    </span>\n                ))}\n            </footer>\n        </div>\n    );\n};\n\nexport default DevProjCard;\n","import { connect } from \"react-redux\";\n\nimport { HeadLine, PrimaryContainer, ErrorContainer } from \"../UI/utils\";\nimport { Spinner } from \"../UI/spinner\";\nimport DevProjCard from \"./devProjCard\";\n\nconst FeaturedProjects = (props) => {\n    let sectionContent = <Spinner />;\n\n    if (props.errMsg !== \"\") {\n        sectionContent = <ErrorContainer>{props.errMsg}</ErrorContainer>;\n    }\n    // if feat projects is not null then only exec\n    else if (props.featProj !== null) {\n        sectionContent = (\n            <div className=\"grid gap-10 mx-auto w-auto xs:w-11/12 sm:w-10/12 md:w-auto grid-cols-1 md:grid-cols-2\">\n                {props.featProj.map((proj, index) => (\n                    <DevProjCard key={index} classes=\"\" proj={proj} />\n                ))}\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"pt-16 xl:pt-24\">\n            <PrimaryContainer>\n                <HeadLine>Featured Projects.</HeadLine>\n                {sectionContent}\n            </PrimaryContainer>\n        </div>\n    );\n};\n\n// subscribe to the global redux store\nconst mapStateToProps = (state) => {\n    return {\n        featProj: state.projects.featProj,\n        errMsg: state.projects.errorMsgs.featProjErrMsg,\n    };\n};\n\nexport default connect(mapStateToProps, null)(FeaturedProjects);\n","import { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { HeadLine, PrimaryContainer, ErrorContainer } from \"../UI/utils\";\nimport { ExpandProjList } from \"./utils\";\nimport { Spinner } from \"../UI/spinner\";\nimport DevProjCard from \"./devProjCard\";\n\nconst OtherProjects = (props) => {\n    // state hook\n    const [totalOpenCards, setTotalOpenCards] = useState(2);\n\n    let sectionContent = <Spinner />;\n\n    if (props.errMsg !== \"\") {\n        sectionContent = <ErrorContainer>{props.errMsg}</ErrorContainer>;\n    }\n    // if other projects is not null then only exec\n    else if (props.otherProj !== null) {\n        sectionContent = (\n            <>\n                <div className=\"grid gap-4 mx-auto w-auto xs:w-11/12 sm:w-10/12 md:w-auto grid-cols-1 md:grid-cols-2\">\n                    {props.otherProj.map((proj, index) => (\n                        <DevProjCard\n                            key={index}\n                            hidden={index < totalOpenCards ? false : true}\n                            classes=\"bg-secondary-color p-4 xxs:p-6 lg:p-8 rounded-md lg:rounded-lg\"\n                            headerGrow\n                            proj={proj}\n                        />\n                    ))}\n                </div>\n                <ExpandProjList\n                    totalOpenCards={totalOpenCards}\n                    setTotalOpenCards={setTotalOpenCards}\n                    initialCardToDisplay={2}\n                    projLen={props.otherProj.length}\n                />\n            </>\n        );\n    }\n\n    return (\n        <PrimaryContainer>\n            <HeadLine>Other Noteworthy Projects.</HeadLine>\n            {sectionContent}\n        </PrimaryContainer>\n    );\n};\n\n// subscribe to the global redux store\nconst mapStateToProps = (state) => {\n    return {\n        otherProj: state.projects.otherProj,\n        errMsg: state.projects.errorMsgs.otherProjErrMsg,\n    };\n};\n\nexport default connect(mapStateToProps, null)(OtherProjects);\n","import { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { HeadLine, SecondaryContainer, ErrorContainer } from \"../UI/utils\";\nimport {\n    ProjImage,\n    ProjTitle,\n    ProjDate,\n    ProjDesc,\n    ExpandProjList,\n} from \"./utils\";\nimport { Spinner } from \"../UI/spinner\";\n\nconst DesignProjects = (props) => {\n    // state hook\n    const [totalOpenCards, setTotalOpenCards] = useState(3);\n\n    let sectionContent = <Spinner />;\n\n    if (props.errMsg !== \"\") {\n        sectionContent = <ErrorContainer>{props.errMsg}</ErrorContainer>;\n    }\n    // if design projects is not null then only exec\n    else if (props.designProj !== null) {\n        sectionContent = (\n            <>\n                <div className=\"grid gap-6 xxxs:gap-8 lg:gap-10 mx-auto w-11/12 xxxs:w-10/12 xxs:w-9/12 xs:w-auto lg:w-11/12 grid-cols-1 xs:grid-cols-2 md:grid-cols-3\">\n                    {props.designProj.map((proj, index) => {\n                        return (\n                            <div\n                                key={index}\n                                className={\n                                    \"h-auto w-full flex flex-col \" +\n                                    (index < totalOpenCards ? \"\" : \"hidden\")\n                                }\n                            >\n                                <ProjImage\n                                    imgUrl={proj.imageUrl}\n                                    imgAltText=\"design-project\"\n                                    width=\"320\"\n                                    height=\"320\"\n                                />\n                                <header className=\"text-content-color flex flex-col\">\n                                    <ProjTitle>{proj.title}</ProjTitle>\n                                    <ProjDate>\n                                        {proj.date}\n                                        &nbsp;&nbsp;&bull;&nbsp;&nbsp;\n                                        {proj.tag}\n                                    </ProjDate>\n                                    <ProjDesc>{proj.desc}</ProjDesc>\n                                </header>\n                            </div>\n                        );\n                    })}\n                </div>\n                <ExpandProjList\n                    totalOpenCards={totalOpenCards}\n                    setTotalOpenCards={setTotalOpenCards}\n                    initialCardToDisplay={3}\n                    projLen={props.designProj.length}\n                />\n            </>\n        );\n    }\n\n    return (\n        <SecondaryContainer>\n            <HeadLine>\n                Design Projects.\n                <p className=\"submain pt-1\">\n                    (All the project are designed using Adobe xd)\n                </p>\n            </HeadLine>\n            {sectionContent}\n        </SecondaryContainer>\n    );\n};\n\n// subscribe to the global redux store\nconst mapStateToProps = (state) => {\n    return {\n        designProj: state.projects.designProj,\n        errMsg: state.projects.errorMsgs.designProjErrMsg,\n    };\n};\n\nexport default connect(mapStateToProps, null)(DesignProjects);\n","import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n    initFeatProj,\n    initOtherProj,\n    initDesignProj,\n} from \"../store/actions/projects\";\n\nimport FeaturedProjects from \"../components/Projects/FeatProj\";\nimport OtherProjects from \"../components/Projects/OtherProj\";\nimport DesignProjects from \"../components/Projects/DesignProj\";\n\nclass Projects extends Component {\n    // fetch the projects data & load into the redux store\n    componentDidMount() {\n        document.title = \"Projects | Dhyey Thumar\";\n\n        this.props.fetchFeatProjData();\n        this.props.fetchOtherProjData();\n        this.props.fetchDesignProjData();\n    }\n\n    render() {\n        return (\n            <>\n                {/* featured projects section */}\n                <FeaturedProjects />\n\n                {/* other noteworthy projects section */}\n                <OtherProjects />\n\n                {/* design projects section */}\n                <DesignProjects />\n            </>\n        );\n    }\n}\n\n// dispatch actions\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchFeatProjData: () => dispatch(initFeatProj()),\n        fetchOtherProjData: () => dispatch(initOtherProj()),\n        fetchDesignProjData: () => dispatch(initDesignProj()),\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(Projects);\n"],"sourceRoot":""}